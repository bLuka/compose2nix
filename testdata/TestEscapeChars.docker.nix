{ pkgs, lib, ... }:

{
  # Runtime
  virtualisation.docker = {
    enable = true;
    autoPrune.enable = true;
  };
  virtualisation.oci-containers.backend = "docker";

  # Containers
  virtualisation.oci-containers.containers."dovecot" = {
    image = "dovecot";
    labels = {
      "ofelia.enabled" = "true";
      "ofelia.job-exec.dovecot_imapsync_runner.command" = "/bin/bash -c \"[[ \${MASTER} == y ]] && /usr/local/bin/gosu nobody /usr/local/bin/imapsync_runner.pl || exit 0\"";
      "ofelia.job-exec.dovecot_imapsync_runner.no-overlap" = "true";
      "ofelia.job-exec.dovecot_imapsync_runner.schedule" = "@every 1m";
      "ofelia.job-exec.dovecot_trim_logs.command" = "/bin/bash -c \"[[ \${MASTER} == y ]] && /usr/local/bin/gosu vmail /usr/local/bin/trim_logs.sh || exit 0\"";
      "ofelia.job-exec.dovecot_trim_logs.schedule" = "@every 1m";
    };
    log-driver = "journald";
    autoStart = false;
    extraOptions = [
      "--network-alias=dovecot"
      "--network=dovecot_default"
    ];
  };
  systemd.services."docker-dovecot" = {
    serviceConfig = {
      Restart = lib.mkOverride 500 "\"no\"";
    };
    after = [
      "docker-network-dovecot_default.service"
    ];
    requires = [
      "docker-network-dovecot_default.service"
    ];
    partOf = [
      "docker-compose-dovecot-root.target"
    ];
    wantedBy = [
      "docker-compose-dovecot-root.target"
    ];
  };

  # Networks
  systemd.services."docker-network-dovecot_default" = {
    path = [ pkgs.docker ];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "${pkgs.docker}/bin/docker network rm -f dovecot_default";
    };
    script = ''
      docker network inspect dovecot_default || docker network create dovecot_default
    '';
    partOf = [ "docker-compose-dovecot-root.target" ];
    wantedBy = [ "docker-compose-dovecot-root.target" ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."docker-compose-dovecot-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
  };
}
